package it.cle.project.model.composti.npi;

import it.cle.project.validator.annotation.ValidateIntegerSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.annotations.Type;

@Entity
@Table(name = "agitazione_aggressivita")
@XmlRootElement(name="agitazione_aggressivita")
@XmlAccessorType(XmlAccessType.FIELD)
public class AgitazioneAggressivita {
	
	/** The id AgitazioneAggressivita */
	private Integer idAgitazioneAggressivita;
	
	/** Questo flag indica se il questionario è applicabile o meno */
	private Boolean nonApplicabile;
	
	/** Questo campo indica la motivazione in caso di non applicabilità */
	private String motivazione;
	
	/** 
	 * Questo campo indica la seguente domanda:  
	 * Il paziente ha periodi durante i quali rifiuta di collaborare o durante i quali non si lascia aiutare dagli 
	 * altri? È difficile da gestire?
	 *  
	 * NO (se no, procedere con la successiva domanda di screening) 
	 * SÌ (procedere con le seguenti domande)
	*/
	private Boolean domandaPreliminare;
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente diviene irritato con chi cerca di assisterlo o resiste ad attività come il bagno od il cambio dei vestiti?
	 * */
	private Integer fDomandaIrritabile;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente diviene irritato con chi cerca di assisterlo o resiste ad attività come il bagno od il cambio dei vestiti? 
	 * */
	private Integer gDomandaIrritabile;
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente è ostinato, volendo le cose fatte a modo suo?	 
	 * */
	private Integer fDomandaOstinato;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente è ostinato, volendo le cose fatte a modo suo?	 
	 * */
	private Integer gDomandaOstinato;
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente non collabora, resiste se aiutato da altri?	 
	 * */
	private Integer fDomandaNonCollabora;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente non collabora, resiste se aiutato da altri?	 
	 * */
	private Integer gDomandaNonCollabora;
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente presenta altri comportamenti che rendono difficoltosa la sua gestione?	 
	 * */
	private Integer fDomandaAltriComportamenti;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente presenta altri comportamenti che rendono difficoltosa la sua gestione?	 
	 * */
	private Integer gDomandaAltriComportamenti;
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente grida o bestemmia in modo arrabbiato?	 
	 * */
	private Integer fDomandaBestemmie;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente grida o bestemmia in modo arrabbiato?	 
	 * */
	private Integer gDomandaBestemmie;
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente sbatte le porte, da calci ai mobili, lancia gli oggetti?	 
	 * */
	private Integer fDomandaLanciaOggetti;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente sbatte le porte, da calci ai mobili, lancia gli oggetti? 
	 * */
	private Integer gDomandaLanciaOggetti;	
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente tenta di far male o di colpire gli altri? 
	 * */
	private Integer fDomandaColpireAltri;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente tenta di far male o di colpire gli altri? 
	 * */
	private Integer gDomandaColpireAltri;	
	
	/** 
	 * Questo campo indica la frequenza assegnata alla domanda: 
	 * Il paziente presenta altri comportamenti aggressivi o altre forme di agitazione?
	 * */
	private Integer fDomandaAltriComportamentiAggressivi;

	/** 
	 * Questo campo indica la gravità assegnata alla domanda: 
	 * Il paziente presenta altri comportamenti aggressivi o altre forme di agitazione? 
	 * */
	private Integer gDomandaAltriComportamentiAggressivi;
	
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column
	public Integer getIdAgitazioneAggressivita() {
		return idAgitazioneAggressivita;
	}

	public void setIdAgitazioneAggressivita(Integer idAgitazioneAggressivita) {
		this.idAgitazioneAggressivita = idAgitazioneAggressivita;
	}

	@NotNull
	@Type(type = "boolean")
	@Column(name = "non_applicabile")
	public Boolean getNonApplicabile() {
		return nonApplicabile;
	}

	public void setNonApplicabile(Boolean nonApplicabile) {
		this.nonApplicabile = nonApplicabile;
	}

	@Column(name = "motivazione")
	public String getMotivazione() {
		return motivazione;
	}

	public void setMotivazione(String motivazione) {
		this.motivazione = motivazione;
	}

	@NotNull
	@Type(type = "boolean")
	@Column(name = "domanda_preliminare")
	public Boolean getDomandaPreliminare() {
		return domandaPreliminare;
	}

	public void setDomandaPreliminare(Boolean domandaPreliminare) {
		this.domandaPreliminare = domandaPreliminare;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_irritabile")
	public Integer getfDomandaIrritabile() {
		return fDomandaIrritabile;
	}

	public void setfDomandaIrritabile(Integer fDomandaIrritabile) {
		this.fDomandaIrritabile = fDomandaIrritabile;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_irritabile")
	public Integer getgDomandaIrritabile() {
		return gDomandaIrritabile;
	}

	public void setgDomandaIrritabile(Integer gDomandaIrritabile) {
		this.gDomandaIrritabile = gDomandaIrritabile;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_ostinato")
	public Integer getfDomandaOstinato() {
		return fDomandaOstinato;
	}

	public void setfDomandaOstinato(Integer fDomandaOstinato) {
		this.fDomandaOstinato = fDomandaOstinato;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_ostinato")
	public Integer getgDomandaOstinato() {
		return gDomandaOstinato;
	}

	public void setgDomandaOstinato(Integer gDomandaOstinato) {
		this.gDomandaOstinato = gDomandaOstinato;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_non_collabora")	
	public Integer getfDomandaNonCollabora() {
		return fDomandaNonCollabora;
	}

	public void setfDomandaNonCollabora(Integer fDomandaNonCollabora) {
		this.fDomandaNonCollabora = fDomandaNonCollabora;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_non_collabora")
	public Integer getgDomandaNonCollabora() {
		return gDomandaNonCollabora;
	}

	public void setgDomandaNonCollabora(Integer gDomandaNonCollabora) {
		this.gDomandaNonCollabora = gDomandaNonCollabora;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_altri_comportamenti")
	public Integer getfDomandaAltriComportamenti() {
		return fDomandaAltriComportamenti;
	}

	public void setfDomandaAltriComportamenti(Integer fDomandaAltriComportamenti) {
		this.fDomandaAltriComportamenti = fDomandaAltriComportamenti;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_altri_comportamenti")
	public Integer getgDomandaAltriComportamenti() {
		return gDomandaAltriComportamenti;
	}

	public void setgDomandaAltriComportamenti(Integer gDomandaAltriComportamenti) {
		this.gDomandaAltriComportamenti = gDomandaAltriComportamenti;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_bestemmie")
	public Integer getfDomandaBestemmie() {
		return fDomandaBestemmie;
	}

	public void setfDomandaBestemmie(Integer fDomandaBestemmie) {
		this.fDomandaBestemmie = fDomandaBestemmie;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_bestemmie")
	public Integer getgDomandaBestemmie() {
		return gDomandaBestemmie;
	}

	public void setgDomandaBestemmie(Integer gDomandaBestemmie) {
		this.gDomandaBestemmie = gDomandaBestemmie;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_lancia_oggetti")
	public Integer getfDomandaLanciaOggetti() {
		return fDomandaLanciaOggetti;
	}

	public void setfDomandaLanciaOggetti(Integer fDomandaLanciaOggetti) {
		this.fDomandaLanciaOggetti = fDomandaLanciaOggetti;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_lancia_oggetti")
	public Integer getgDomandaLanciaOggetti() {
		return gDomandaLanciaOggetti;
	}

	public void setgDomandaLanciaOggetti(Integer gDomandaLanciaOggetti) {
		this.gDomandaLanciaOggetti = gDomandaLanciaOggetti;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_colpire_altri")
	public Integer getfDomandaColpireAltri() {
		return fDomandaColpireAltri;
	}

	public void setfDomandaColpireAltri(Integer fDomandaColpireAltri) {
		this.fDomandaColpireAltri = fDomandaColpireAltri;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_colpire_altri")
	public Integer getgDomandaColpireAltri() {
		return gDomandaColpireAltri;
	}

	public void setgDomandaColpireAltri(Integer gDomandaColpireAltri) {
		this.gDomandaColpireAltri = gDomandaColpireAltri;
	}

	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_altri_comportamenti_aggressivi")
	public Integer getfDomandaAltriComportamentiAggressivi() {
		return fDomandaAltriComportamentiAggressivi;
	}

	public void setfDomandaAltriComportamentiAggressivi(Integer fDomandaAltriComportamentiAggressivi) {
		this.fDomandaAltriComportamentiAggressivi = fDomandaAltriComportamentiAggressivi;
	}

	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_altri_comportamenti_aggressivi")
	public Integer getgDomandaAltriComportamentiAggressivi() {
		return gDomandaAltriComportamentiAggressivi;
	}

	public void setgDomandaAltriComportamentiAggressivi(Integer gDomandaAltriComportamentiAggressivi) {
		this.gDomandaAltriComportamentiAggressivi = gDomandaAltriComportamentiAggressivi;
	}

}
