package it.cle.project.model.composti.npi;

import it.cle.project.validator.annotation.ValidateIntegerSet;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.validation.constraints.NotNull;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlRootElement;

import org.hibernate.annotations.Type;

// TODO: Auto-generated Javadoc
/**
 * The Class DepressioneDisforia.
 */
@Entity
@Table(name = "depressione_disforia")
@XmlRootElement(name="depressione_disforia")
@XmlAccessorType(XmlAccessType.FIELD)
public class DepressioneDisforia {

	/**  The id DepressioneDisforia. */
	private Integer idDepressioneDisforia;
	
	/**  Questo flag indica se il questionario è applicabile o meno. */
	private Boolean nonApplicabile;
	
	/**  Questo campo indica la motivazione in caso di non applicabilità. */
	private String motivazione;
	
	/**   Questo campo indica la seguente domanda:  Il paziente ha periodi durante i quali rifiuta di collaborare o durante i quali non si lascia aiutare dagli  altri? È difficile da gestire?   NO (se no, procedere con la successiva domanda di screening)  SÌ (procedere con le seguenti domande). */
	private Boolean domandaPreliminare;
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente ha dei periodi di malinconia o di pianto che sembrano indicare tristezza?. */
	private Integer fDomandaMalinconia;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente ha dei periodi di malinconia o di pianto che sembrano indicare tristezza? . */
	private Integer gDomandaMalinconia;
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente parla o si comporta come se fosse triste o giù di corda?. */
	private Integer fDomandaTristezza;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente parla o si comporta come se fosse triste o giù di corda?. */
	private Integer gDomandaTristezza;	
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente si abbatte o dice di sentirsi un fallito?. */
	private Integer fDomandaFallito;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente si abbatte o dice di sentirsi un fallito?. */
	private Integer gDomandaFallito;		
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente dice di essere una persona cattiva o si aspetta di essere punito?. */
	private Integer fDomandaPersonaCattiva;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente dice di essere una persona cattiva o si aspetta di essere punito?. */
	private Integer gDomandaPersonaCattiva;	
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente sembra molto scoraggiato o dice di non avere speranze per il futuro?. */
	private Integer fDomandaScoraggiato;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente sembra molto scoraggiato o dice di non avere speranze per il futuro?. */
	private Integer gDomandaScoraggiato;		
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente dice di essere un peso per la propria famiglia o che la propria famiglia starebbe meglio senza di lui?. */
	private Integer fDomandaPeso;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente dice di essere un peso per la propria famiglia o che la propria famiglia starebbe meglio senza di lui?. */
	private Integer gDomandaPeso;
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente dice di desiderare la morte o dice di volersi uccidere?. */
	private Integer fDomandaSuicidio;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente dice di desiderare la morte o dice di volersi uccidere?. */
	private Integer gDomandaSuicidio;	
	
	/**   Questo campo indica la frequenza assegnata alla domanda:  Il paziente presenta altri segni di depressione o di tristezza?. */
	private Integer fDomandaAltriSegni;

	/**   Questo campo indica la gravità assegnata alla domanda:  Il paziente presenta altri segni di depressione o di tristezza?. */
	private Integer gDomandaAltriSegni;

	/**
	 * Gets the id depressione disforia.
	 *
	 * @return the id depressione disforia
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column
	public Integer getIdDepressioneDisforia() {
		return idDepressioneDisforia;
	}

	/**
	 * Sets the id depressione disforia.
	 *
	 * @param idDepressioneDisforia the new id depressione disforia
	 */
	public void setIdDepressioneDisforia(Integer idDepressioneDisforia) {
		this.idDepressioneDisforia = idDepressioneDisforia;
	}

	/**
	 * Gets the non applicabile.
	 *
	 * @return the non applicabile
	 */
	@NotNull
	@Type(type = "boolean")
	@Column(name = "non_applicabile")
	public Boolean getNonApplicabile() {
		return nonApplicabile;
	}

	/**
	 * Sets the non applicabile.
	 *
	 * @param nonApplicabile the new non applicabile
	 */
	public void setNonApplicabile(Boolean nonApplicabile) {
		this.nonApplicabile = nonApplicabile;
	}

	/**
	 * Gets the motivazione.
	 *
	 * @return the motivazione
	 */
	@Column(name = "motivazione")
	public String getMotivazione() {
		return motivazione;
	}

	/**
	 * Sets the motivazione.
	 *
	 * @param motivazione the new motivazione
	 */
	public void setMotivazione(String motivazione) {
		this.motivazione = motivazione;
	}

	/**
	 * Gets the domanda preliminare.
	 *
	 * @return the domanda preliminare
	 */
	@NotNull
	@Type(type = "boolean")
	@Column(name = "domanda_preliminare")
	public Boolean getDomandaPreliminare() {
		return domandaPreliminare;
	}

	/**
	 * Sets the domanda preliminare.
	 *
	 * @param domandaPreliminare the new domanda preliminare
	 */
	public void setDomandaPreliminare(Boolean domandaPreliminare) {
		this.domandaPreliminare = domandaPreliminare;
	}

	/**
	 * Gets the f domanda malinconia.
	 *
	 * @return the f domanda malinconia
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_malinconia")
	public Integer getfDomandaMalinconia() {
		return fDomandaMalinconia;
	}

	/**
	 * Sets the f domanda malinconia.
	 *
	 * @param fDomandaMalinconia the new f domanda malinconia
	 */
	public void setfDomandaMalinconia(Integer fDomandaMalinconia) {
		this.fDomandaMalinconia = fDomandaMalinconia;
	}

	/**
	 * Gets the g domanda malinconia.
	 *
	 * @return the g domanda malinconia
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_malinconia")
	public Integer getgDomandaMalinconia() {
		return gDomandaMalinconia;
	}

	/**
	 * Sets the g domanda malinconia.
	 *
	 * @param gDomandaMalinconia the new g domanda malinconia
	 */
	public void setgDomandaMalinconia(Integer gDomandaMalinconia) {
		this.gDomandaMalinconia = gDomandaMalinconia;
	}

	/**
	 * Gets the f domanda tristezza.
	 *
	 * @return the f domanda tristezza
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_tristezza")	
	public Integer getfDomandaTristezza() {
		return fDomandaTristezza;
	}

	/**
	 * Sets the f domanda tristezza.
	 *
	 * @param fDomandaTristezza the new f domanda tristezza
	 */
	public void setfDomandaTristezza(Integer fDomandaTristezza) {
		this.fDomandaTristezza = fDomandaTristezza;
	}

	/**
	 * Gets the g domanda tristezza.
	 *
	 * @return the g domanda tristezza
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_tristezza")
	public Integer getgDomandaTristezza() {
		return gDomandaTristezza;
	}

	/**
	 * Sets the g domanda tristezza.
	 *
	 * @param gDomandaTristezza the new g domanda tristezza
	 */
	public void setgDomandaTristezza(Integer gDomandaTristezza) {
		this.gDomandaTristezza = gDomandaTristezza;
	}

	/**
	 * Gets the f domanda fallito.
	 *
	 * @return the f domanda fallito
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_fallito")	
	public Integer getfDomandaFallito() {
		return fDomandaFallito;
	}

	/**
	 * Sets the f domanda fallito.
	 *
	 * @param fDomandaFallito the new f domanda fallito
	 */
	public void setfDomandaFallito(Integer fDomandaFallito) {
		this.fDomandaFallito = fDomandaFallito;
	}

	/**
	 * Gets the g domanda fallito.
	 *
	 * @return the g domanda fallito
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_fallito")
	public Integer getgDomandaFallito() {
		return gDomandaFallito;
	}

	/**
	 * Sets the g domanda fallito.
	 *
	 * @param gDomandaFallito the new g domanda fallito
	 */
	public void setgDomandaFallito(Integer gDomandaFallito) {
		this.gDomandaFallito = gDomandaFallito;
	}

	/**
	 * Gets the f domanda persona cattiva.
	 *
	 * @return the f domanda persona cattiva
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_persona_cattiva")	
	public Integer getfDomandaPersonaCattiva() {
		return fDomandaPersonaCattiva;
	}

	/**
	 * Sets the f domanda persona cattiva.
	 *
	 * @param fDomandaPersonaCattiva the new f domanda persona cattiva
	 */
	public void setfDomandaPersonaCattiva(Integer fDomandaPersonaCattiva) {
		this.fDomandaPersonaCattiva = fDomandaPersonaCattiva;
	}

	/**
	 * Gets the g domanda persona cattiva.
	 *
	 * @return the g domanda persona cattiva
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_persona_cattiva")
	public Integer getgDomandaPersonaCattiva() {
		return gDomandaPersonaCattiva;
	}

	/**
	 * Sets the g domanda persona cattiva.
	 *
	 * @param gDomandaPersonaCattiva the new g domanda persona cattiva
	 */
	public void setgDomandaPersonaCattiva(Integer gDomandaPersonaCattiva) {
		this.gDomandaPersonaCattiva = gDomandaPersonaCattiva;
	}

	/**
	 * Gets the f domanda scoraggiato.
	 *
	 * @return the f domanda scoraggiato
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_scoraggiato")	
	public Integer getfDomandaScoraggiato() {
		return fDomandaScoraggiato;
	}

	/**
	 * Sets the f domanda scoraggiato.
	 *
	 * @param fDomandaScoraggiato the new f domanda scoraggiato
	 */
	public void setfDomandaScoraggiato(Integer fDomandaScoraggiato) {
		this.fDomandaScoraggiato = fDomandaScoraggiato;
	}

	/**
	 * Gets the g domanda scoraggiato.
	 *
	 * @return the g domanda scoraggiato
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_scoraggiato")
	public Integer getgDomandaScoraggiato() {
		return gDomandaScoraggiato;
	}

	/**
	 * Sets the g domanda scoraggiato.
	 *
	 * @param gDomandaScoraggiato the new g domanda scoraggiato
	 */
	public void setgDomandaScoraggiato(Integer gDomandaScoraggiato) {
		this.gDomandaScoraggiato = gDomandaScoraggiato;
	}

	/**
	 * Gets the f domanda peso.
	 *
	 * @return the f domanda peso
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_peso")	
	public Integer getfDomandaPeso() {
		return fDomandaPeso;
	}

	/**
	 * Sets the f domanda peso.
	 *
	 * @param fDomandaPeso the new f domanda peso
	 */
	public void setfDomandaPeso(Integer fDomandaPeso) {
		this.fDomandaPeso = fDomandaPeso;
	}

	/**
	 * Gets the g domanda peso.
	 *
	 * @return the g domanda peso
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_peso")
	public Integer getgDomandaPeso() {
		return gDomandaPeso;
	}

	/**
	 * Sets the g domanda peso.
	 *
	 * @param gDomandaPeso the new g domanda peso
	 */
	public void setgDomandaPeso(Integer gDomandaPeso) {
		this.gDomandaPeso = gDomandaPeso;
	}

	/**
	 * Gets the f domanda suicidio.
	 *
	 * @return the f domanda suicidio
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_suicidio")
	public Integer getfDomandaSuicidio() {
		return fDomandaSuicidio;
	}

	/**
	 * Sets the f domanda suicidio.
	 *
	 * @param fDomandaSuicidio the new f domanda suicidio
	 */
	public void setfDomandaSuicidio(Integer fDomandaSuicidio) {
		this.fDomandaSuicidio = fDomandaSuicidio;
	}

	/**
	 * Gets the g domanda suicidio.
	 *
	 * @return the g domanda suicidio
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_suicidio")
	public Integer getgDomandaSuicidio() {
		return gDomandaSuicidio;
	}

	/**
	 * Sets the g domanda suicidio.
	 *
	 * @param gDomandaSuicidio the new g domanda suicidio
	 */
	public void setgDomandaSuicidio(Integer gDomandaSuicidio) {
		this.gDomandaSuicidio = gDomandaSuicidio;
	}

	/**
	 * Gets the f domanda altri segni.
	 *
	 * @return the f domanda altri segni
	 */
	@ValidateIntegerSet(acceptedValues = { 0,1,2,3,4 })
	@Column(name = "f_domanda_altri_segni")
	public Integer getfDomandaAltriSegni() {
		return fDomandaAltriSegni;
	}

	/**
	 * Sets the f domanda altri segni.
	 *
	 * @param fDomandaAltriSegni the new f domanda altri segni
	 */
	public void setfDomandaAltriSegni(Integer fDomandaAltriSegni) {
		this.fDomandaAltriSegni = fDomandaAltriSegni;
	}

	/**
	 * Gets the g domanda altri segni.
	 *
	 * @return the g domanda altri segni
	 */
	@ValidateIntegerSet(acceptedValues = { 1,2,3 })
	@Column(name = "g_domanda_altri_segni")
	public Integer getgDomandaAltriSegni() {
		return gDomandaAltriSegni;
	}

	/**
	 * Sets the g domanda altri segni.
	 *
	 * @param gDomandaAltriSegni the new g domanda altri segni
	 */
	public void setgDomandaAltriSegni(Integer gDomandaAltriSegni) {
		this.gDomandaAltriSegni = gDomandaAltriSegni;
	}	
	
	
}
